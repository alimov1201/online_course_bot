from aiogram import Bot, Dispatcher, types, F, filters
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton, Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery, FSInputFile
from aiogram.fsm.state import State, StatesGroup
import asyncio
import openai
import os
from pytubefix import YouTube
import ssl
ssl._create_default_https_context = ssl._create_unverified_context



openai.api_key = "sk-proj-bZ2XEBWPfMqcoojhQEVGT3BlbkFJ1IvU6DrYpZXoU8Ivil8B"
bot = Bot(token="7089119554:AAHRINcIj7opCLHqDdhbyynjCstgL2AYkXg")
dp = Dispatcher(bot=bot)

class Reg(StatesGroup):
    lang = State()
    name = State()
    surname = State()
    number = State()
    credit_num = State()

basket_uz = []
basket_ru = []
total = []

about_us = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üìπ", callback_data="video"), InlineKeyboardButton(text="üîó", url="https://www.pdp.uz/")]
])

phone_num = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="üìû", request_contact=True)]
], resize_keyboard=True)

lang_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="ru"), KeyboardButton(text="uz")],
],resize_keyboard=True)

main_kb_uz = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="kurslar"), KeyboardButton(text="savatcha"), KeyboardButton(text="Qo'llab quvvatlash")],
    [KeyboardButton(text="Biz haqimizda"), KeyboardButton(text="Tilni o'zgartirish")]
],resize_keyboard=True)

main_kb_ru = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="–∫—É—Ä—Å—ã"), KeyboardButton(text="–∫–æ—Ä–∑–∏–Ω–∞"), KeyboardButton(text="–ø–æ–¥–¥–µ—Ä–∂–∫–∞")],
    [KeyboardButton(text="–æ –Ω–∞—Å"), KeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")]
],resize_keyboard=True)

courses_kb_uz = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="Front-end", callback_data="front-uz"),InlineKeyboardButton(text="Back-end", callback_data="back-uz")],
    [InlineKeyboardButton(text="Starter", callback_data="start-uz"),InlineKeyboardButton(text="Dizayn", callback_data="dizayn-uz")],
    [InlineKeyboardButton(text="‚ùå", callback_data="delete")]
])

courses_kb_ru = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="Front-end", callback_data="front-ru"),InlineKeyboardButton(text="Back-end", callback_data="back-ru")],
    [InlineKeyboardButton(text="Starter", callback_data="start-ru"),InlineKeyboardButton(text="Dizayn", callback_data="dizayn-ru")],
    [InlineKeyboardButton(text="‚ùå", callback_data="delete")]
])

front_buy = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üõí", callback_data="front_buy"), InlineKeyboardButton(text="‚ùå", callback_data="delete")]
])

back_buy = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üõí", callback_data="back_buy"), InlineKeyboardButton(text="‚ùå", callback_data="delete")]
])

dizayn_buy = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üõí", callback_data="dizayn_buy"), InlineKeyboardButton(text="‚ùå", callback_data="delete")]
])

start_buy = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üõí", callback_data="start_buy"), InlineKeyboardButton(text="‚ùå", callback_data="delete")]
])

basket_kb_uz = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="Sotib olish"), KeyboardButton(text="Bekor qilish"), KeyboardButton(text="Ortga")]
], resize_keyboard=True)

basket_kb_ru = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="–∫—É–ø–∏—Ç—å"), KeyboardButton(text="–æ—Ç–º–µ–Ω–∏—Ç—å"), KeyboardButton(text="–Ω–∞–∑–∞–¥")]
], resize_keyboard=True)

@dp.message(F.text == "Ortga")
async def ortga(message: Message):
    await message.answer("Bosh menuga qaytdingiz", reply_markup=main_kb_uz)

@dp.message(F.text == "–Ω–∞–∑–∞–¥")
async def ortga_ru(message: Message):
    await message.answer("–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_kb_ru)

@dp.callback_query(F.data == "delete")
async def del_message(call: CallbackQuery):
    await bot.delete_message(chat_id=call.from_user.id, message_id=call.message.message_id)

# Registration 

@dp.message(filters.CommandStart())
async def start_bot(message: Message, state: FSMContext):
    await state.set_state(Reg.lang)
    await message.answer("Tilni tanlang\n–≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=lang_kb)

@dp.message(Reg.lang)
async def language_bot(message: Message, state: FSMContext):
    await state.update_data(lang=message.text)
    await state.set_state(Reg.name)
    data = await state.get_data()
    if data['lang'] == "uz":
        await message.answer(text="Ismingizni kiriting", reply_markup=ReplyKeyboardRemove())
    else:
        await message.answer(text="–≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è", reply_markup=ReplyKeyboardRemove())

@dp.message(Reg.name)
async def name_bot(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(Reg.surname)
    data = await state.get_data()
    if data['lang'] == "uz":
        await message.answer(text="familiyangizni kiriting")
    else:
        await message.answer(text="–≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é")

@dp.message(Reg.surname)
async def surname_bot(message: Message, state: FSMContext):
    await state.update_data(surname=message.text)
    await state.set_state(Reg.number)
    data = await state.get_data()
    if data['lang'] == "uz":
        await message.answer(text="Telefon raqamingizni jonating", reply_markup=phone_num)
    else:
        await message.answer(text="–ø—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=phone_num)

@dp.message(Reg.number)
async def number_bot(message: Message, state: FSMContext):
    await state.update_data(number=message.contact.phone_number)
    data = await state.get_data()
    await state.clear()
    if data['lang'] == "uz":
        await message.answer(text=f"{data["name"]}\n{data["surname"]}\n{data["number"]}", reply_markup=main_kb_uz)
    else:
        await message.answer(text=f"{data["name"]}\n{data["surname"]}\n{data["number"]}", reply_markup=main_kb_ru)
    

# Courses

@dp.message(F.text == "kurslar")
async def courses_uz(message: Message):
    await message.answer("Bizning online kurlarimiz haqida to'liq ma'lumotga ega bo'ling", reply_markup=courses_kb_uz)

@dp.message(F.text == "–∫—É—Ä—Å—ã")
async def courses_ru(message: Message):
    await message.answer("–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –Ω–∞—à–∏—Ö –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞—Ö", reply_markup=courses_kb_ru)

@dp.callback_query(F.data == "front-uz")
async def front_uz(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=2c8d0a422ecbb19aa372d7d61629112cdc573b32-9868376-images-thumbs&n=13", caption="Front end kurslarimizda siz web sayt qilishni o'rganasiz. Kurs davomida html, css va javascript kabi dasturlash tillarini o'rganasiz\n\nOyiga 500000 so'm", reply_markup=front_buy)

@dp.callback_query(F.data == "front-ru")
async def front_ru(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=2c8d0a422ecbb19aa372d7d61629112cdc573b32-9868376-images-thumbs&n=13", caption="–ù–∞ –Ω–∞—à–∏—Ö –∫—É—Ä—Å–∞—Ö –ø–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –≤–µ–±-—Å–∞–π—Ç—ã. –í —Ö–æ–¥–µ –∫—É—Ä—Å–∞ –≤—ã –∏–∑—É—á–∏—Ç–µ —Ç–∞–∫–∏–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–∞–∫ html, css –∏ javascript\n\n500000 —Å—É–º –≤ –º–µ—Å—è—Ü", reply_markup=front_buy)


@dp.callback_query(F.data == "front_buy")
async def front_buyer(call: CallbackQuery, state: FSMContext):
    basket_uz.append("Front-end - 500000 so'm")
    basket_ru.append("Front-end - 500000 —Å—É–º")
    total.append(500000)
    data = await state.get_data()
    await call.message.answer(text="üõí")

@dp.callback_query(F.data == "back-uz")
async def back_uz(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=5bc97a5ff1db93730a56d39a03aeda660bcd803c7e6a17d7-11491093-images-thumbs&n=13", caption="Back end kurslarimizda siz sun'iy intellekt yaratishni va ma'lumotlar bilan ishlashni o'rganasiz. Kurs davomida python, c++ va java kabi dasturlash tillarini o'rganasiz\n\nOyiga 700000 so'm", reply_markup=back_buy)

@dp.callback_query(F.data == "back-ru")
async def back_ru(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=5bc97a5ff1db93730a56d39a03aeda660bcd803c7e6a17d7-11491093-images-thumbs&n=13", caption="–ù–∞ –Ω–∞—à–∏—Ö –∫—É—Ä—Å–∞—Ö –ø–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏ –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–∞–Ω–Ω—ã–º–∏. –í —Ö–æ–¥–µ –∫—É—Ä—Å–∞ –≤—ã –∏–∑—É—á–∏—Ç–µ —Ç–∞–∫–∏–µ —è–∑—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–∞–∫ Python, C++ –∏ Java\n\n700000 —Å—É–º –≤ –º–µ—Å—è—Ü", reply_markup=back_buy)


@dp.callback_query(F.data == "back_buy")
async def back_buyer(call: CallbackQuery, state: FSMContext):
    basket_uz.append("Back-end - 700000 so'm")
    basket_ru.append("Back-end - 700000 —Å—É–º")
    total.append(700000)
    data = await state.get_data()
    await call.message.answer(text="üõí")

@dp.callback_query(F.data == "dizayn-uz")
async def dizayn_uz(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=fad2794480190f70ba6173fed1041724d952dc07-5487333-images-thumbs&n=13", caption="Dizayn kurslarimizda siz Photoshop va unity bilan ishlashni o'rganasiz\n\nOyiga 450000 so'm", reply_markup=dizayn_buy)

@dp.callback_query(F.data == "dizayn-ru")
async def dizayn_ru(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=fad2794480190f70ba6173fed1041724d952dc07-5487333-images-thumbs&n=13", caption="–ù–∞ –Ω–∞—à–∏—Ö –∫—É—Ä—Å–∞—Ö –¥–∏–∑–∞–π–Ω–∞ –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å Photoshop –∏ Unity\n\n450000 —Å—É–º –≤ –º–µ—Å—è—Ü", reply_markup=dizayn_buy)


@dp.callback_query(F.data == "dizayn_buy")
async def dizayn_buyer(call: CallbackQuery, state: FSMContext):
    basket_uz.append("Dizayn - 450000 so'm")
    basket_ru.append("–¥–∏–∑–∞–π–Ω - 450000 —Å—É–º")
    total.append(450000)
    data = await state.get_data()
    await call.message.answer(text="üõí")

@dp.callback_query(F.data == "start-uz")
async def start_uz(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=59120500a885f45f599e88fc8d55a279e10985b2-12510920-images-thumbs&n=13", caption="Starter kurslarimizda siz Scratch orqali o'yinlar yaratasiz, Canva bilan turli xil dizayni ishlarni amalga oshirasiz va yana boshqa web sahifalar bilan tanishasiz\n\nOyiga 275000 so'm", reply_markup=start_buy)

@dp.callback_query(F.data == "start-ru")
async def start_ru(call: CallbackQuery):
    await call.message.answer_photo(photo="https://avatars.mds.yandex.net/i?id=59120500a885f45f599e88fc8d55a279e10985b2-12510920-images-thumbs&n=13", caption="–ù–∞ –Ω–∞—à–∏—Ö —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∫—É—Ä—Å–∞—Ö –≤—ã –±—É–¥–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–≥—Ä—ã –≤ Scratch, –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –≤ Canva –∏ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏\n\n275 000 —Å—É–º –≤ –º–µ—Å—è—Ü.", reply_markup=start_buy)


@dp.callback_query(F.data == "start_buy")
async def start_buyer(call: CallbackQuery, state: FSMContext):
    basket_uz.append("Starter - 275000 so'm")
    basket_ru.append("C—Ç–∞—Ä—Ç–µ—Ä - 275000 —Å—É–º")
    total.append(275000)
    data = await state.get_data()
    await call.message.answer(text="üõí")

@dp.message(F.text == "savatcha")
async def savat_uz(message: Message):
    global basket_uz
    global total
    if basket_uz == []:
        await message.answer("Savatcha bo'sh")
    else:
        text = ""
        price = 0
        for i in basket_uz:
            text += f"{i}\n"
        for i in total:
            price += i
        await message.answer(text=f"{text}\nUmumiy hisob - {price} so'm", reply_markup=basket_kb_uz)

@dp.message(F.text == "Sotib olish")
async def buy_uz(message: Message, state: FSMContext):
    await state.set_state(Reg.credit_num)
    await message.answer(text="Karta raqamingizni kiriting", reply_markup=ReplyKeyboardRemove())

@dp.message(Reg.credit_num)
async def credit_uz(message: Message, state: FSMContext):
    await state.update_data(credit_num=message.text)
    if str(message.text).isdigit() and len(message.text) == 16:
        await message.answer("kursni sotib olganingiz uchun rahmat", reply_markup=main_kb_uz)
        await state.clear()
        global basket_uz, basket_ru, total
        basket_ru.clear()
        basket_uz.clear()
        total.clear()
    else:
        await message.answer("ERROR")

@dp.message(F.text == "Bekor qilish")
async def decline_uz(message: Message):
    global basket_uz, basket_ru, total
    basket_ru.clear()
    basket_uz.clear()
    total.clear()
    await message.answer("Xayrli kun", reply_markup=main_kb_uz)

@dp.message(F.text == "–∫–æ—Ä–∑–∏–Ω–∞")
async def savat_ru(message: Message):
    global basket_ru
    global total
    if basket_ru == []:
        await message.answer("–∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
    else:
        text = ""
        price = 0
        for i in basket_ru:
            text += f"{i}\n"
        for i in total:
            price += i
        await message.answer(text=f"{text}\n–û–±—â–∞—è —Å—É–º–º–∞ - {price} —Å—É–º", reply_markup=basket_kb_ru)

@dp.message(F.text == "–∫—É–ø–∏—Ç—å")
async def buy_uz(message: Message, state: FSMContext):
    await state.set_state(Reg.credit_num)
    await message.answer(text="–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã", reply_markup=ReplyKeyboardRemove())

@dp.message(Reg.credit_num)
async def credit_ru(message: Message, state: FSMContext):
    await state.update_data(credit_num=message.text)
    if str(message.text).isdigit() and len(message.text) == 16:
        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –∫—É—Ä—Å–∞", reply_markup=main_kb_ru)
        await state.clear()
        global basket_uz, basket_ru, total
        basket_ru.clear()
        basket_uz.clear()
        total.clear()
    else:
        await message.answer("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

@dp.message(F.text == "–æ—Ç–º–µ–Ω–∏—Ç—å")
async def decline_ru(message: Message):
    global basket_uz, basket_ru, total
    basket_ru.clear()
    basket_uz.clear()
    total.clear()
    await message.answer("–•–æ—Ä–æ—à–µ–≥–æ —Ç–µ–±–µ –¥–Ω—è", reply_markup=main_kb_ru)

@dp.message(F.text == "Biz haqimizda")
async def about(message: Message):
    await message.answer(text="Siz bu yerda Videoni ko'rib yoki havola orqali saytga o'tib biz haqimizda bilib olishingiz mumkin", reply_markup=about_us)

@dp.message(F.text == "–æ –Ω–∞—Å")
async def about_ru(message: Message):
    await message.answer(text="–û –Ω–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ—Å–º–æ—Ç—Ä–µ–≤ –≤–∏–¥–µ–æ –∑–¥–µ—Å—å –∏–ª–∏ –ø–µ—Ä–µ–π–¥—è –Ω–∞ —Å–∞–π—Ç –ø–æ —Å—Å—ã–ª–∫–µ", reply_markup=about_us)

@dp.callback_query(F.data == "video")
async def videomp4(call: CallbackQuery):
    yt = YouTube(url="https://youtu.be/QyhwSYhX09s?si=c2Q4gNHX0_hAf34C")
    url = yt.streams.get_highest_resolution()
    stream = url.download()
    video = FSInputFile(stream)
    await call.message.answer_video(video=video)
    os.remove(stream)

@dp.message(F.text == "Qo'llab quvvatlash")
async def support_uz(message: Message):
    await message.answer(text="Men ChatGPTman istagan savolingizni so'rang")
    user_input = message.text
    response = openai.completions.create(
        model="gpt-3.5-turbo-instruct",
        prompt=user_input,
        max_tokens=1000,
        temperature=0.7,
    )
    await message.answer(text=f"{response.choices[0].text.strip()}")

@dp.message(F.text == "–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support_uz(message: Message):
    await message.answer(text="–Ø ChatGPT. –ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ.")
    user_input = message.text
    response = openai.completions.create(
        model="gpt-3.5-turbo-instruct",
        prompt=user_input,
        max_tokens=1000,
        temperature=0.7,
    )
    await message.answer(text=f"{response.choices[0].text.strip()}")

@dp.message(F.text == "Tilni o'zgartirish")
async def change_lang_uz(message: Message, state: FSMContext):
    data = await state.get_data()
    await message.answer("Tilni tanlang", reply_markup=lang_kb)

@dp.message(F.text == "uz")
async def lang_uz(message: Message, state: FSMContext):
    await message.answer("Til o'zgartirildi", reply_markup=main_kb_uz)
    await state.clear()

@dp.message(F.text == "–∏–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")
async def change_lang_ru(message: Message, state: FSMContext):
    data = await state.get_data()
    await message.answer("–≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫", reply_markup=lang_kb)

@dp.message(F.text == "ru")
async def lang_ru(message: Message, state: FSMContext):
    await message.answer("—è–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω", reply_markup=main_kb_ru)
    await state.clear()


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())